const e=JSON.parse('{"key":"v-f1158a20","path":"/codenotes/graphql/graphql-client.html","title":"GraphQL 客户端","lang":"zh-CN","frontmatter":{"title":"GraphQL 客户端","metaTitle":"GraphQL 客户端 | GraphQL 教程","metaDescription":"GraphQL 客户端有助于更好地进行查询、缓存和创建可重用模块。 我们来看一下我们为什么需要 GraphQL 客户端和可用的热门客户端库","icon":"storage","category":["GraphQL"],"tag":["GraphQL"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"这一部分将介绍专门的 GraphQL 客户端如何有助于更好地进行查询、缓存和创建可重用模块。 可以使用原生 JavaScript Fetch API 发出 GraphQL 请求。 例如，为了抓取作者列表，我们可以使用以下代码发出查询： 这当然是假设你的服务器接受通过 HTTP 发出的 GraphQL 请求。 （还记得 GraphQL 是与协议无关的吗？...","head":[["meta",{"property":"og:url","content":"http://www.codepit.tech/mynotes/mynotes/codenotes/graphql/graphql-client.html"}],["meta",{"property":"og:site_name","content":"Zuooの学习笔记"}],["meta",{"property":"og:title","content":"GraphQL 客户端"}],["meta",{"property":"og:description","content":"这一部分将介绍专门的 GraphQL 客户端如何有助于更好地进行查询、缓存和创建可重用模块。 可以使用原生 JavaScript Fetch API 发出 GraphQL 请求。 例如，为了抓取作者列表，我们可以使用以下代码发出查询： 这当然是假设你的服务器接受通过 HTTP 发出的 GraphQL 请求。 （还记得 GraphQL 是与协议无关的吗？..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-05-22T06:53:00.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"GraphQL"}],["meta",{"property":"article:modified_time","content":"2023-05-22T06:53:00.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"我为什么需要一个 GraphQL 客户端？","slug":"why-do-i-need-a-graphql-client","link":"#why-do-i-need-a-graphql-client","children":[]},{"level":2,"title":"流畅的 GraphQL 客户端","slug":"fluent-graphql-clients","link":"#fluent-graphql-clients","children":[]}],"git":{"createdTime":1684738380000,"updatedTime":1684738380000,"contributors":[{"name":"zql","email":"1241236275@qq.com","commits":1}]},"readingTime":{"minutes":2.53,"words":759},"filePathRelative":"codenotes/graphql/graphql-client.md","localizedDate":"2023年5月22日"}');export{e as data};
