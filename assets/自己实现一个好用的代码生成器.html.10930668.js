import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as r,c as a,a as e,d as t,e as l,b as c,r as _}from"./app.96f91024.js";const i={},s=e("h2",{id:"自己实现一个好用的代码生成器",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#自己实现一个好用的代码生成器","aria-hidden":"true"},"#"),t(" 自己实现一个好用的代码生成器")],-1),d={href:"https://github.com/Echoidf/gocode_generate",target:"_blank",rel:"noopener noreferrer"},p=c('<h2 id="项目介绍" tabindex="-1"><a class="header-anchor" href="#项目介绍" aria-hidden="true">#</a> 项目介绍</h2><p>代码生成器，用于快速生成代码，支持MySQL数据库，使用Golang原生的template进行渲染</p><p>最近尝试使用了一下各种golang的orm框架，比如xorm、gorm、gozero、zorm等，这些框架基本上都会有代码生成的工具，用以适配自己的框架，但是有时候我并不想生成这么繁琐的格式，这对于追求代码简洁之道的开发者来说简直是不忍直视。</p><p>灵机一动，不如自己亲自做一个代码生成器，我想怎么生成就怎么生成。说干就干，我开始查阅代码生成器的生成原理，其实很简单，以本项目为例，目前只支持了MySQL数据库，执行流程如下：</p><ul><li>首先连接数据源</li><li>获取数据库表信息</li><li>获取表字段信息</li><li>使用go template渲染模板文件生成代码</li></ul><p>go template的语法非常简单，基本上就是if、range、with等关键字，再加上一些内置函数，基本上可以满足大部分的需求。</p>',6),h={href:"https://cloud.tencent.com/developer/article/1683688",target:"_blank",rel:"noopener noreferrer"},u=e("p",null,"其中我总结比较重要的几点是：",-1),m=e("ol",null,[e("li",null,[e("p",null,"我们可以自定义函数作为模板的变量，这样我们就可以在模板中使用自定义的函数了")]),e("li",null,[e("p",null,[t("模板中的变量，我们可以在模板中使用"),e("code",null,"{{.}}"),t("来获取，这样我们就可以在模板中使用传入的变量了")])]),e("li",null,[e("p",null,"这个小项目整体上比较简单，我们可以通过覆写模板文件如default.tmpl来生成我们想要的代码，还可以自定义其他的模板文件来进行扩展，目前支持了xorm框架")])],-1);function f(g,x){const o=_("ExternalLinkIcon");return r(),a("div",null,[s,e("p",null,[t("项目地址："),e("a",d,[t("https://github.com/Echoidf/gocode_generate"),l(o)])]),p,e("p",null,[t("参考文档："),e("a",h,[t("https://cloud.tencent.com/developer/article/1683688"),l(o)])]),u,m])}const v=n(i,[["render",f],["__file","自己实现一个好用的代码生成器.html.vue"]]);export{v as default};
