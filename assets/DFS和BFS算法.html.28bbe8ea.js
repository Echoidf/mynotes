const t=JSON.parse('{"key":"v-5ea5a6e6","path":"/codenotes/algdata/DFS%E5%92%8CBFS%E7%AE%97%E6%B3%95.html","title":"DFS和BFS算法","lang":"zh-CN","frontmatter":{"title":"DFS和BFS算法","icon":"edit","category":["算法"],"tag":["DFS BFS"],"sticky":false,"star":37,"article":true,"timeline":true,"description":"本篇记录一下Golang如何实现深度优先搜索【DFS】和广度优先搜索【BFS】两种算法。 BFS 广度优先遍历也叫层序遍历，需要借助一个队列来实现，在遇到岔路口时我们需要把所有的选择记录下来即入队操作 DFS 深度优先遍历 DFS 包括三种算法：前序遍历，中序遍历和后序遍历 可以采用递归实现： ```go // 深度优先遍历 DFS func DFS(...","head":[["meta",{"property":"og:url","content":"http://www.codepit.tech/mynotes/mynotes/codenotes/algdata/DFS%E5%92%8CBFS%E7%AE%97%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"Zuooの学习笔记"}],["meta",{"property":"og:title","content":"DFS和BFS算法"}],["meta",{"property":"og:description","content":"本篇记录一下Golang如何实现深度优先搜索【DFS】和广度优先搜索【BFS】两种算法。 BFS 广度优先遍历也叫层序遍历，需要借助一个队列来实现，在遇到岔路口时我们需要把所有的选择记录下来即入队操作 DFS 深度优先遍历 DFS 包括三种算法：前序遍历，中序遍历和后序遍历 可以采用递归实现： ```go // 深度优先遍历 DFS func DFS(..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2024-02-09T02:10:31.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"DFS BFS"}],["meta",{"property":"article:modified_time","content":"2024-02-09T02:10:31.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"BFS","slug":"bfs","link":"#bfs","children":[]},{"level":2,"title":"DFS","slug":"dfs","link":"#dfs","children":[]}],"git":{"createdTime":1707444631000,"updatedTime":1707444631000,"contributors":[{"name":"zql","email":"1241236275@qq.com","commits":1}]},"readingTime":{"minutes":0.98,"words":294},"filePathRelative":"codenotes/algdata/DFS和BFS算法.md","localizedDate":"2024年2月9日"}');export{t as data};
